name: test command_line

on:
  push:
  workflow_dispatch:

permissions:
  checks: write
  contents: read
  pull-requests: write
  issues: read

jobs:
  sprint_4_with_postgress:
    runs-on: ubuntu-22.04
    container:
      image: praktikumcpp/practicum_cpp_backend:latest
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
      options: --name main-container
    services:
      postgres:
        image: ubuntu/postgres:14-22.04_beta
        env:
          POSTGRES_PASSWORD: Mys3Cr3t
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5432

    steps:
      - name: get docker network
        run: |
          echo "DOCKER_NETWORK=$(docker inspect main-container -f '{{range $k, $v := .NetworkSettings.Networks}}{{printf "%s" $k}}{{end}}')" >> $GITHUB_ENV

      - name: Checkout code & tests
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Install dependencies
        run: |
          cp -R /home/forconan/.conan /github/home/.conan
          pip uninstall conan -y
          pip install -U conan==1.59.0
          pip install -r requirements.txt
          pip show pytest

      # - name: run tests sprint4 db_of_books
      #   run: |
      #     cd cpp-backend-tests-practicum/scripts/sprint4
      #     ./db_of_books/run_postgresless.sh

      - name: run tests sprint4 bookypedia-1
        run: |
          cd cpp-backend-tests-practicum/scripts/sprint4
          ./bookypedia-1/run_postgresless.sh

      # - name: run tests sprint4 bookypedia-2
      #   run: |
      #     cd cpp-backend-tests-practicum/scripts/sprint4
      #     ./bookypedia-2/run_postgresless.sh

      # - name: run tests sprint4 leave_game
      #   run: |
      #     cd cpp-backend-tests-practicum/scripts/sprint4
      #     ./leave_game/run_postgresless.sh

      - name: Publish XML reports
        uses: EnricoMi/publish-unit-test-result-action@v2
        if: always()
        with:
          junit_files: ${{ github.workspace }}/*.xml
